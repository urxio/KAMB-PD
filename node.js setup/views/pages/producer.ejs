<!DOCTYPE html< />
<html lang="en">

<head>
  <meta charset="utf-8" />
  <title> Producer Page </title>
  <link rel="stylesheet" type="text/css" href="/styles.css">
</head>

<body>

  <!--Rectangular shape at top of page-->
  <div class="box">
    <div class="rectangle"></div>
  </div>

  <!--logo-->
  <div class="box2">
    <div class="group">
      <div class="overlap-group">
        <div class="text-wrapper">K</div>
      </div>
      <div class="div">AMB</div>
    </div>
  </div>


  <!--Picture profile-->
  <a href="/profileUS">
    <div class="box3">
      <img class="ellipse" src="img/ellipse.png" />
    </div>
  </a>

  <!--Select text-->
  <div class="note" style="color: black; font-size: 16px; font-family: 'inter-regular', Helvetica;">
    <p>
    <h3> Select a timeslot</h3>
    </p>
  </div>

  <!--Select time-->



  <!-- Submit button positioned at the bottom right corner -->
  <form action="/producer2" method="post">
    <input type="hidden" id="dj-name" name="djName">
    <label3 for="startTime">Start time:</label3>
    <input type="datetime-local" id="start-time" name="startTime" value="2023-06-12T19:30" />
    <label4 for="endTime">End time:</label4>
    <input type="datetime-local" id="end-time" name="endTime" value="2023-06-12T19:30" />
    <button type="submit" id="submit-button">Next</button>
  </form>

  <button id="clear-table">Delete Schedule</button>
  <div class="divider"></div>

  

  <!--Scrollable table of events-->
  <div class="flex-container">
    <div class="flex-column">
      <div class="table-wrapper">
        <table id="schedule-table" table class="fl-table">
          <thead>
            <tr>
              <th colspan="5">Today's Schedule</th>
            </tr>
            <tr>
              <th>Shows</th>
              <th>Start Time</th>
              <th>End Time</th>
              <th>Genres</th>
              <th>DJ</th>
            </tr>
          </thead>
          <tbody>

          </tbody>
        </table>
      </div>
    </div>

    <!--Scrollable list of DJ's-->

    <div class="flex-column2">
      <div class="table-wrapper">
        <table class="fl-table2">
          <thead>
            <tr>
              <th colspan="5"> <strong> Select a DJ to assign songs</strong></th>
            </tr>
            <tr>
              <th>
                <img src="img/sabrina.png" alt="Sabrina">
                <figcaption>Sabrina Colton</figcaption>
              </th>
              <th>
                <img src="img/jason.png" alt="Jason">
                <figcaption>Jason Press</figcaption>
              </th>
              <th>
                <img src="img/grant.png" alt="Grant">
                <figcaption>Grant Xhaka</figcaption>
              </th>
              <th>
                <img src="img/richie.png" alt="Richie">
                <figcaption>Richie Pearson</figcaption>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                <center> <button onclick="selectDJ('Sabrina Colton')">Select</button></center>
              </td>
              <td>
                <center> <button onclick="selectDJ('Jason Press')">Select</button></center>
              </td>
              <td>
                <center> <button onclick="selectDJ('Grant Xhaka')">Select</button></center>
              </td>
              <td>
                <center> <button onclick="selectDJ('Richie Pearson')">Select</button></center>
              </td>
            </tr>

            <tr>
              <td>
                <center> <img src="img/helena.png" alt="helena"></center>
                <figcaption><strong>Helena Celo</strong> </figcaption>
              </td>
              <td>
                <center><img src="img/erick.png" alt="Erick"></center>
                <figcaption><strong>Erick Dalton</strong> </figcaption>
              </td>
              <td>

              </td>
              <td>

              </td>

            </tr>
            <tr>
              <td>
                <center> <button onclick="selectDJ('Helena Celo')">Select</button></center>
              </td>
              <td>
                <center> <button onclick="selectDJ('Erick Dalton')">Select</button></center>
              </td>
              <td> </td>
              <td> </td>
            </tr>


          </tbody>
        </table>

        <script>
          function selectDJ(djId) {
            // Save the selected DJ data to localStorage or any other storage mechanism
            localStorage.setItem('selectedDJ', djId);

            // Update the value of the hidden dj-name input
            document.getElementById('dj-name').value = djId;

            // Alert user which user was selected
            alert(djId + " was selected");
          }
        </script>
      </div>
    </div>
  </div>

  

  <!--Grid of stats-->
  <div class="grid-container">
    <div class="grid-item">
      <h2>Users</h2>
      <p>1000</p>
    </div>
    <div class="grid-item">
      <h2>Revenue</h2>
      <p>$10,000</p>
    </div>
    <div class="grid-item">
      <h2>Orders</h2>
      <p>500</p>
    </div>
    <div class="grid-item">
      <h2>Conversion Rate</h2>
      <p>50%</p>
    </div>
  </div>



  <button class="buttonPro" onclick="window.location.href='/profileDJ'">See DJs Profiles</button>

 

  <script>
    // Define newShows in the global scope
    var newShows = [];

    window.onload = function () {
      // Load existing shows from localStorage
      var existingShows = JSON.parse(localStorage.getItem('shows')) || [];

      document.getElementById('submit-button').addEventListener('click', function () {
        var startTime = document.getElementById('start-time').value;
        var endTime = document.getElementById('end-time').value;

        localStorage.setItem('startTime', startTime);
        localStorage.setItem('endTime', endTime);
      });

      // Extract the time from the start time
      var savedStartTime = localStorage.getItem('startTime');
      var savedEndTime = localStorage.getItem('endTime');

      //convert to 12hr
      var startTime12h = convertTo12HourFormat(savedStartTime.split('T')[1]);
      var endTime12h = convertTo12HourFormat(savedEndTime.split('T')[1]);

      var djId = localStorage.getItem('selectedDJ');

      if (djId === 'Sabrina Colton') {
        newShows1 = [
          {
            name: 'Sabrina Special',
            startTime: startTime12h,
            endTime: endTime12h,
            genres: 'Ambient Mix',
            djImage: 'img/sabrina.png'
          },
        ];
        existingShows.push(...newShows1);
      } else if (djId === 'Jason Press') {
        newShows2 = [
          {
            name: 'Jason Garden',
            startTime: startTime12h,
            endTime: endTime12h,
            genres: 'Ambient Dreamscapes',
            djImage: 'img/jason.png'
          },
        ];
        existingShows.push(...newShows2);
      } else if (djId === 'Grant Xhaka') {
        newShows3 = [
          {
            name: 'Unwind with Grant',
            startTime: startTime12h,
            endTime: endTime12h,
            genres: 'Ambient Meditation',
            djImage: 'img/grant.png'
          },
        ];
        existingShows.push(...newShows3);
      } else if (djId === 'Richie Pearson') {
        newShows4 = [
          {
            name: 'Energize with Richie',
            startTime: startTime12h,
            endTime: endTime12h,
            genres: 'Deep Listening',
            djImage: 'img/richie.png'
          },
        ];
        existingShows.push(...newShows4);
      } else if (djId === 'Helena Celo') {
        newShows5 = [
          {
            name: 'Helena Melodies',
            startTime: startTime12h,
            endTime: endTime12h,
            genres: 'Ambient Soul',
            djImage: 'img/helena.png'
          },
        ];
        existingShows.push(...newShows5);
      } else if (djId === 'Erick Dalton') {
        newShows6 = [
          {
            name: 'Breathing Forest',
            startTime: startTime12h,
            endTime: endTime12h,
            genres: 'Ambient Relaxation',
            djImage: 'img/erick.png'
          },
        ];
        existingShows.push(...newShows6);
      }

      // Save the updated shows to localStorage
      localStorage.setItem('shows', JSON.stringify(existingShows));

      // Update the table with the existing shows
      updateTable(existingShows);

      document.getElementById('clear-table').addEventListener('click', function () {
        // Clear the table body
        var tableBody = document.getElementById('schedule-table').getElementsByTagName('tbody')[0];
        tableBody.innerHTML = '';

        // Clear the shows from localStorage
        localStorage.removeItem('shows');
      });
    };

    function convertTo12HourFormat(time) {
      var hour = parseInt(time.split(':')[0]);
      var minute = time.split(':')[1];
      var period = hour >= 12 ? 'PM' : 'AM';

      // Convert hour to 12-hour format
      hour = hour % 12;
      if (hour !== 0) {
        hour = hour;
      } else {
        hour = 12;
      } // Handle midnight (0) as 12

      return hour + ':' + minute + ' ' + period;
    }

    function updateTable(shows) {
      var tableBody = document.getElementById('schedule-table').getElementsByTagName('tbody')[0];
      var existingRowCount = tableBody.getElementsByTagName('tr').length;

      // If there are fewer rows than the shows data, add new rows
      if (existingRowCount < shows.length) {
        for (var i = existingRowCount; i < shows.length; i++) {
          var row = document.createElement('tr');
          row.innerHTML = `
        <td>${shows[i].name}</td>
        <td>${shows[i].startTime}</td>
        <td>${shows[i].endTime}</td>
        <td>${shows[i].genres}</td>
        <td><img src="${shows[i].djImage}" class="small-image"></td>
      `;
          tableBody.appendChild(row);
        }
      }
    }



  </script>

</body>

</html>
