<!DOCTYPE html< />
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title> Producer Page 2</title>
    <link rel="stylesheet" type="text/css" href="/styles2.css">
</head>

<body>

    <!--Rectangular shape at top of page-->
    <div class="box">
        <div class="rectangle"></div>
    </div>

    <!--logo-->
    <div class="box2">
        <div class="group">
            <div class="overlap-group">
                <div class="text-wrapper">K</div>
            </div>
            <div class="div">AMB</div>
        </div>
    </div>


    <!--Picture profile-->
    <div class="box3"><img class="ellipse" src="img/ellipse.png" /></div>

    <!--Song list-->
    <div class="box4">
        <img class="rectangle1" src="img/rectangle-4.svg" />
        <div class="text-wrapper">Song List</div>
        <div class="container">
            <table class="fl-table2">
                <thead>
                    <tr>
                        <th> </th>
                        <th> </th>
                        <th> </th>
                    </tr>
                </thead>
                <% songs.forEach(function(song) { %>
                    <tr>
                        <td><img src="img/song.png" class="small-image"></td>
                        <td class="song-title"><strong>
                                <%= song.title %>
                            </strong></td>
                        <td> <button class="add-to-playlist"> Add to Playlist </button></td>
                    </tr>
                    <tr>
                        <td> </td>
                        <td class="song-artist">
                            <%= song.artist %>
                        </td>
                    </tr>
                    <% }); %>
                        </tbody>
            </table>

        </div>

    </div>

    <!--Playlist-->
    <div class="box5">
        <img class="rectangle2" src="img/rectangle-4.svg" />
        <div class="text-wrapper2">Current Playlist</div>
        <div class="container2">
            <table class="fl-table3">
                <thead>
                    <tr>
                        <th> </th>
                        <th> </th>
                        <th> </th>
                    </tr>
                </thead>
                <tbody>
                    
                </tbody>
            </table>
        </div>

    </div>

    <!--Audio Player-->
    <div class="audio">
        <audio controls>
            <source src="audio/rebirth.m4a" type="audio/mpeg">
        </audio>
    </div>

    <!--Background gray box-->
    <div class="box6">
        <div class="rectangle"></div>
    </div>

    <!--DJ's-->
    <div class="ellipse">
        <img id="dj-image" src="" alt="DJ Image">
    </div>
    <div class="text-wrapper">
        <p id="dj-name"></p>
    </div>


    <!--Search box-->
    <div class="box8">
        <input type="text" id="input-field" placeholder="Search for songs" name="input-field">
        <img class="searchIcon" src="img/search icon.png" />
    </div>

    </div>

    <!--Search area-->
    <div class="flex-container">

        <table class="fl-table">

            <tbody>
                <tr>
                    <td><strong>Recent Search</strong></td>

                </tr>
                <tr>
                    <td></td>

                <tr>
                    <td>
                        <ul>

                        </ul>
                    </td>
                </tr>
            </tbody>
        </table>


    </div>

    <!--search box-->
    <div class="box9"><img class="rectangle" src="img/rectangle-4.svg" /></div>

    <!--Date info-->
    <div class="box10">
        <div class="group2">
            <div class="rectangle3" id="date-display"> </div>
            <div class="text-wrapper3">Date: </div>
            <div class="rectangle4" id="time-display"></div>
            <div class="text-wrapper4">Time: </div>
        </div>
    </div>

    <!--Back button-->
    <div class="box11">
        <div class="back-button">
            <form action="/producer" method="get">
                <button type="submit" id="submit-button">Back</button>
            </form>
        </div>
        <div class="save-button">
            <form action="/producer2" method="post" onsubmit="return false;">
                <input type="hidden" name="djName" id="djName">
                <input type="hidden" name="startTime" id="startTime">
                <input type="hidden" name="endTime" id="endTime">
                <button type="submit">Save</button>
            </form>
        </div>
    </div>

    <script>
        //used to add and remove song in the current playlist
        // Get all "Add to Playlist" buttons
        var buttons = document.getElementsByClassName('add-to-playlist');

        // Add event listener to each button
        for (var i = 0; i < buttons.length; i++) {
            buttons[i].addEventListener('click', function () {
                // Get the song title and artist from the same row
                var songTitle = this.parentElement.parentElement.getElementsByClassName('song-title')[0].textContent;
                var songArtist = this.parentElement.parentElement.nextElementSibling.getElementsByClassName('song-artist')[0].textContent;

                // Create a new row for the playlist table
                var newRow = document.createElement('tr');

                // Create cells for the song image, title, and remove button
                var songImageCell = document.createElement('td');
                var songTitleCell = document.createElement('td');
                var removeButtonCell = document.createElement('td');

                // Set the content of the cells
                // Set the content of the cells
                songImageCell.innerHTML = '<img src="img/song.png" class="small-image">';
                songTitleCell.innerHTML = '<strong>' + songTitle + '</strong>';
                removeButtonCell.innerHTML = '<button class="remove-song"> remove </button>';

                // Append the cells to the new row
                newRow.appendChild(songImageCell);
                newRow.appendChild(songTitleCell);
                newRow.appendChild(removeButtonCell);

                // Append the new row to the playlist table
                document.querySelector('.fl-table3 tbody').appendChild(newRow);

                // Create a new row for the artist name
                var artistRow = document.createElement('tr');
                var emptyCell = document.createElement('td');
                var artistCell = document.createElement('td');

                // Set the content of the artist cell
                artistCell.textContent = songArtist;

                // Append the cells to the artist row
                artistRow.appendChild(emptyCell);
                artistRow.appendChild(artistCell);

                // Append the artist row to the playlist table
                document.querySelector('.fl-table3 tbody').appendChild(artistRow);

                // Add event listener to the remove button
                removeButtonCell.children[0].addEventListener('click', function (e) {
                    e.preventDefault();
                    var rowToRemove = this.parentNode.parentNode;
                    var artistRowToRemove = rowToRemove.nextElementSibling;
                    rowToRemove.parentNode.removeChild(rowToRemove);
                    artistRowToRemove.parentNode.removeChild(artistRowToRemove);

                    // Update the playlist in localStorage
                    updatePlaylistInLocalStorage();
                });

                // Update the playlist in localStorage
                updatePlaylistInLocalStorage();
            });
        }

        //used for data persistance even after refresh
        function updatePlaylistInLocalStorage() {
            var playlistTable = document.querySelector('.fl-table3 tbody');
            var playlist = [];
            for (var i = 0; i < playlistTable.rows.length; i += 2) {
                var songTitle = playlistTable.rows[i].cells[1].textContent;
                var songArtist = playlistTable.rows[i + 1].cells[1].textContent;
                playlist.push({ title: songTitle, artist: songArtist });
            }
            localStorage.setItem('playlist', JSON.stringify(playlist));
        }

        window.onload = function () {
            var savedStartTime = localStorage.getItem('startTime');
            var savedEndTime = localStorage.getItem('endTime');

            // Extract the date from the start time
            var date = savedStartTime.split('T')[0];

            // Extract the time from the start time
            var startTime = convertTo12HourFormat(savedStartTime.split('T')[1]);

            // Extract the time from the end time
            var endTime = convertTo12HourFormat(savedEndTime.split('T')[1]);

            // Set the values of the hidden form fields
            document.getElementById('startTime').value = startTime;
            document.getElementById('endTime').value = endTime;

            // Set the date and time in the appropriate elements
            document.getElementById('date-display').textContent = date;
            document.getElementById('time-display').textContent = startTime + ' - ' + endTime;

            // Retrieve the selected DJ data from localStorage
            var selectedDJ = localStorage.getItem('selectedDJ');

            // Update the DJ image and name in the HTML
            var djImageElement = document.getElementById('dj-image');
            var djNameElement = document.getElementById('dj-name');

            // Set the DJ image source and alt attribute
            djImageElement.src = 'img/' + selectedDJ.split(' ')[0] + '.png';
            djImageElement.alt = selectedDJ + ' Image';

            // Set the DJ name
            djNameElement.textContent = selectedDJ;

            // Set the DJ name in the hidden input field
            document.getElementById('djName').value = selectedDJ;

            //---
            // Load the playlist from localStorage
            var playlist = JSON.parse(localStorage.getItem('playlist') || '[]');
            for (var i = 0; i < playlist.length; i++) {
                var song = playlist[i];

                // Create a new row for the playlist table
                var newRow = document.createElement('tr');

                // Create cells for the song image, title, and remove button
                var songImageCell = document.createElement('td');
                var songTitleCell = document.createElement('td');
                var removeButtonCell = document.createElement('td');

                // Set the content of the cells
                songImageCell.innerHTML = '<img src="img/song.png" class="small-image">';
                songTitleCell.innerHTML = '<strong>' + song.title + '</strong>';
                removeButtonCell.innerHTML = '<button class="remove-song"> remove </button>';

                // Append the cells to the new row
                newRow.appendChild(songImageCell);
                newRow.appendChild(songTitleCell);
                newRow.appendChild(removeButtonCell);

                // Append the new row to the playlist table
                document.querySelector('.fl-table3 tbody').appendChild(newRow);

                // Create a new row for the artist name
                var artistRow = document.createElement('tr');
                var emptyCell = document.createElement('td');
                var artistCell = document.createElement('td');

                // Set the content of the artist cell
                artistCell.textContent = song.artist;

                // Append the cells to the artist row
                artistRow.appendChild(emptyCell);
                artistRow.appendChild(artistCell);

                // Append the artist row to the playlist table
                document.querySelector('.fl-table3 tbody').appendChild(artistRow);
            }

            //used to remove song from current playlist
            // Get the table body
            var tableBody = document.querySelector('.fl-table3 tbody');

            // Add event listener to the table body
            tableBody.addEventListener('click', function (e) {
                // Check if the clicked element is a remove button
                if (e.target && e.target.matches('.remove-song')) {
                    e.preventDefault();
                    var rowToRemove = e.target.parentNode.parentNode;
                    var artistRowToRemove = rowToRemove.nextElementSibling;
                    rowToRemove.parentNode.removeChild(rowToRemove);
                    artistRowToRemove.parentNode.removeChild(artistRowToRemove);

                    // Update the playlist in localStorage
                    updatePlaylistInLocalStorage();
                }
            });

            //used for searching
            document.getElementById('input-field').addEventListener('keyup', function () {
                var input = this.value.toLowerCase();
                var songs = document.querySelectorAll('.fl-table2 .song-title');
                var searchTable = document.querySelector('.fl-table tbody');

                // Clear the search table
                searchTable.innerHTML = '';

                songs.forEach(function (song) {
                    if (song.textContent.toLowerCase().includes(input)) {
                        // Create a new row and cell for the search table
                        var newRow = document.createElement('tr');
                        var newCell = document.createElement('td');

                        // Set the content of the cell
                        newCell.textContent = song.textContent;

                        // Append the cell to the new row
                        newRow.appendChild(newCell);

                        // Append the new row to the search table
                        searchTable.appendChild(newRow);
                    }
                });
            });

            //save info to playlist DB
            document.querySelector('form[action="/producer2"]').addEventListener('submit', function (e) {
                e.preventDefault();

                var djName = document.getElementById('djName').value;
                var startTime = document.getElementById('startTime').value;
                var endTime = document.getElementById('endTime').value;

                var playlistTable = document.querySelector('.fl-table3 tbody');
                var songs = [];
                for (var i = 0; i < playlistTable.rows.length; i += 2) {
                    var songTitle = playlistTable.rows[i].cells[1].textContent;
                    var songArtist = playlistTable.rows[i + 1].cells[1].textContent;
                    songs.push({ title: songTitle, artist: songArtist });
                }

                var playlist = {
                    dj: djName,
                    timeslot: startTime + ' - ' + endTime,
                    songs: songs
                };

                fetch('/api/playlists', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(playlist),
                })
                    .then(response => response.json())
                    .then(data => {
                        console.log('Success:', data);
                        alert('DJ Playlist was successfully updated');

                    })
                    .catch((error) => {
                        console.error('Error:', error);
                    });
            });

            //clearing content of current playlist after bath button is hit
            document.getElementById('submit-button').addEventListener('click', function (e) {
                // Clear the playlist table
                var playlistTable = document.querySelector('.fl-table3 tbody');
                playlistTable.innerHTML = '';

                // Clear the playlist in local storage
                localStorage.removeItem('playlist');
            });
        };

        function convertTo12HourFormat(time) {
            var hour = parseInt(time.split(':')[0]);
            var minute = time.split(':')[1];
            var period = hour >= 12 ? 'PM' : 'AM';

            // Convert hour to 12-hour format
            hour = hour % 12;
            if (hour !== 0) {
                hour = hour;
            } else {
                hour = 12;
            } // Handle midnight (0) as 12

            return hour + ':' + minute + ' ' + period;
        }
    </script>

</body>

</html>